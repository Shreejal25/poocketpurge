@page "/login"

@using DataModel.Model
@inject NavigationManager Nav
@inject IUserService UserService

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="row text-white">
        <h2 class="text-primary text-center">Welcome to Pocket Purge</h2>
        <div class="col-md-4 text-center d-flex flex-column justify-content-center align-items-center">
            <img src="logopocketpurge.png" alt="Pocket Purge Logo" class="img-fluid mb-3" style="max-width: 200px;" />
        </div>
        <div class="col-md-8">
            <div class="card shadow bg-dark text-white">
                <div class="card-body">
                    <h3 class="text-center mb-4">Login</h3>
                    <form @onsubmit="HandleLogin">
                        <div class="row mb-3">
                            <label for="username" class="col-sm-4 col-form-label text-white">Username:</label>
                            <div class="col-sm-8">
                                <input type="text" id="username" class="form-control form-control-sm" @bind="Users.Username" required />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <label for="password" class="col-sm-4 col-form-label text-white">Password:</label>
                            <div class="col-sm-8">
                                <input type="password" id="password" class="form-control form-control-sm" @bind="Users.Password" required />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <label for="currency" class="col-sm-4 col-form-label text-white">Currency:</label>
                            <div class="col-sm-8">
                                <select id="currency" class="form-control form-control-sm" @bind="Users.PreferredCurrency" required>
                                    <option value="">Select Currency</option>
                                    <option value="USD">USD</option>
                                    <option value="EUR">EUR</option>
                                    <option value="GBP">GBP</option>
                                    <!-- Add other currencies as needed -->
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-8 offset-sm-4">
                                <button type="submit" class="btn btn-primary btn-sm w-100">Login</button>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(ErrorMessage))
                        {
                            <div class="alert alert-danger text-center">@ErrorMessage</div>
                        }
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background-color: #051726;
    }

    label {
        font-weight: bold;
    }

    .form-control-sm {
        background-color: #f8f9fa; /* Light background for input fields */
        color: #212529; /* Dark text for contrast */
        border: 1px solid #ced4da; /* Subtle border */
    }

        .form-control-sm:focus {
            box-shadow: 0 0 5px #00aaff;
            border-color: #00aaff;
        }

    .btn-primary {
        background-color: #00aaff;
        border-color: #00aaff;
    }

        .btn-primary:hover {
            background-color: #0078cc;
            border-color: #0078cc;
        }

    .card {
        background-color: #ffffff; /* Light background for the form card */
        color: #212529; /* Dark text for readability */
        border: 1px solid #ced4da;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
    }

    .card-body {
        padding: 1.5rem;
    }

</style>

@code {
    private string? ErrorMessage;

    public User Users { get; set; } = new();

    private async void HandleLogin()
    {
        if (UserService.Login(Users))
        {
            Nav.NavigateTo("/dashboard");
        }
        else
        {
            ErrorMessage = "Invalid Username or Password";
        }
    }
}
